// <auto-generated />
using System;
using AikaWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AikaWeb.Migrations
{
    [DbContext(typeof(EntityHandler))]
    [Migration("20240512201745_mssql.onprem_migration_186")]
    partial class mssqlonprem_migration_186
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AikaWeb.Models.AccountModel", b =>
                {
                    b.Property<long>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AccountID"), 1L, 1);

                    b.Property<string>("AccountPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("AccountUsername")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("AikaWeb.Models.BuffModel", b =>
                {
                    b.Property<long>("CharacterBuffID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CharacterBuffID"), 1L, 1);

                    b.Property<DateTime?>("BuffDuration")
                        .HasColumnType("datetime2");

                    b.Property<int>("BuffStatus")
                        .HasColumnType("int");

                    b.Property<long>("CharacterID")
                        .HasColumnType("bigint");

                    b.Property<int>("SkillListID")
                        .HasColumnType("int");

                    b.HasKey("CharacterBuffID");

                    b.ToTable("CharacterBuffs");
                });

            modelBuilder.Entity("AikaWeb.Models.CharacterModel", b =>
                {
                    b.Property<long>("CharacterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CharacterID"), 1L, 1);

                    b.Property<long>("AccountID")
                        .HasColumnType("bigint");

                    b.Property<int?>("AddinitionalAgility")
                        .HasColumnType("int");

                    b.Property<int?>("AddinitionalConstituion")
                        .HasColumnType("int");

                    b.Property<int?>("AddinitionalIntelligence")
                        .HasColumnType("int");

                    b.Property<int?>("AddinitionalLuck")
                        .HasColumnType("int");

                    b.Property<int?>("AddinitionalStrength")
                        .HasColumnType("int");

                    b.Property<int>("AllHonorPoints")
                        .HasColumnType("int");

                    b.Property<int>("AllKillPoints")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterActiveAction")
                        .HasColumnType("int");

                    b.Property<int?>("CharacterActiveTitleID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterClass")
                        .HasColumnType("int");

                    b.Property<int>("CharacterFirstLogin")
                        .HasColumnType("int");

                    b.Property<long>("CharacterGold")
                        .HasColumnType("bigint");

                    b.Property<int?>("CharacterGuildID")
                        .HasColumnType("int");

                    b.Property<int>("CharacterLastRoration")
                        .HasColumnType("int");

                    b.Property<int>("CharacterLevel")
                        .HasColumnType("int");

                    b.Property<string>("CharacterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CharacterPositionX")
                        .HasColumnType("int");

                    b.Property<int>("CharacterPositionY")
                        .HasColumnType("int");

                    b.Property<byte>("CharacterSlot")
                        .HasColumnType("tinyint");

                    b.Property<byte>("CharacterStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("CreatedByAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("CurrentExperience")
                        .HasColumnType("bigint");

                    b.Property<int?>("CurrentHelthPoints")
                        .HasColumnType("int");

                    b.Property<int>("CurrentHonorPoints")
                        .HasColumnType("int");

                    b.Property<int>("CurrentKillPoints")
                        .HasColumnType("int");

                    b.Property<int?>("CurrentManaPoints")
                        .HasColumnType("int");

                    b.Property<int>("CurrentSkillPoints")
                        .HasColumnType("int");

                    b.Property<int>("InfamiaStatus")
                        .HasColumnType("int");

                    b.Property<string>("LoggedByAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoggedHour")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LoggedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumericToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("NumericTokenError")
                        .HasColumnType("tinyint");

                    b.Property<byte>("PlayerKillActive")
                        .HasColumnType("tinyint");

                    b.Property<int>("SavedPositionX")
                        .HasColumnType("int");

                    b.Property<int>("SavedPositionY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScheduledDeleteOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CharacterID");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("AikaWeb.Models.HotBarModel", b =>
                {
                    b.Property<long>("CharacterHotBarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CharacterHotBarID"), 1L, 1);

                    b.Property<long>("CharacterID")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<byte>("ItemSlot")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ItemStatus")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ItemType")
                        .HasColumnType("tinyint");

                    b.HasKey("CharacterHotBarID");

                    b.ToTable("CharacterHotBar");
                });

            modelBuilder.Entity("AikaWeb.Models.ItemModel", b =>
                {
                    b.Property<long>("CharacterItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CharacterItemID"), 1L, 1);

                    b.Property<long>("CharacterID")
                        .HasColumnType("bigint");

                    b.Property<byte>("InventorySlot")
                        .HasColumnType("tinyint");

                    b.Property<byte>("InventoryType")
                        .HasColumnType("tinyint");

                    b.Property<int>("ItemAmount")
                        .HasColumnType("int");

                    b.Property<int>("ItemAppearanceID")
                        .HasColumnType("int");

                    b.Property<byte>("ItemDurabilityMax")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ItemDurabilityMin")
                        .HasColumnType("tinyint");

                    b.Property<int>("ItemEffect1_ID")
                        .HasColumnType("int");

                    b.Property<int>("ItemEffect1_Value")
                        .HasColumnType("int");

                    b.Property<int>("ItemEffect2_ID")
                        .HasColumnType("int");

                    b.Property<int>("ItemEffect2_Value")
                        .HasColumnType("int");

                    b.Property<int>("ItemEffect3_ID")
                        .HasColumnType("int");

                    b.Property<int>("ItemEffect3_Value")
                        .HasColumnType("int");

                    b.Property<int>("ItemExpireTime")
                        .HasColumnType("int");

                    b.Property<int>("ItemIdentication")
                        .HasColumnType("int");

                    b.Property<int>("ItemListID")
                        .HasColumnType("int");

                    b.Property<byte>("ItemStatus")
                        .HasColumnType("tinyint");

                    b.HasKey("CharacterItemID");

                    b.ToTable("CharacterItems");
                });

            modelBuilder.Entity("AikaWeb.Models.NationModel", b =>
                {
                    b.Property<int>("NationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationID"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MarshalGuildID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("NationAlliedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NationAlliedID")
                        .HasColumnType("int");

                    b.Property<long>("NationGold")
                        .HasColumnType("bigint");

                    b.Property<string>("NationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationRank")
                        .HasColumnType("int");

                    b.Property<int>("NationStatus")
                        .HasColumnType("int");

                    b.Property<int>("TaxCitizens")
                        .HasColumnType("int");

                    b.Property<int>("TaxSettlement")
                        .HasColumnType("int");

                    b.Property<int>("TaxVisitors")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("NationID");

                    b.ToTable("Nations");
                });

            modelBuilder.Entity("AikaWeb.Models.ServerModel", b =>
                {
                    b.Property<int>("ServerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServerID"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("NationID")
                        .HasColumnType("int");

                    b.Property<string>("ServerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServerPort")
                        .HasColumnType("int");

                    b.Property<int>("ServerStatus")
                        .HasColumnType("int");

                    b.Property<int>("ServerType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ServerID");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("AikaWeb.Models.SessionActiveModel", b =>
                {
                    b.Property<long>("AccountID")
                        .HasColumnType("bigint");

                    b.Property<int>("AccountNation")
                        .HasColumnType("int");

                    b.Property<string>("AccountUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedByAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SessionID")
                        .HasColumnType("bigint");

                    b.Property<int>("SessionStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.ToTable("vwSessionsActive");
                });

            modelBuilder.Entity("AikaWeb.Models.SessionModel", b =>
                {
                    b.Property<long>("SessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SessionID"), 1L, 1);

                    b.Property<long>("AccountID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedByAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("SessionStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionID");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("AikaWeb.Models.SkillModel", b =>
                {
                    b.Property<long>("CharacterSkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CharacterSkillID"), 1L, 1);

                    b.Property<long>("CharacterID")
                        .HasColumnType("bigint");

                    b.Property<int>("SkillListID")
                        .HasColumnType("int");

                    b.Property<byte>("SkillSlot")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SkillStatus")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SkillType")
                        .HasColumnType("tinyint");

                    b.HasKey("CharacterSkillID");

                    b.ToTable("CharacterSkills");
                });

            modelBuilder.Entity("AikaWeb.Models.TitleModel", b =>
                {
                    b.Property<long>("CharacterTitleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CharacterTitleID"), 1L, 1);

                    b.Property<long>("CharacterID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TitleID")
                        .HasColumnType("int");

                    b.Property<int>("TitleLevel")
                        .HasColumnType("int");

                    b.Property<int>("TitleProgress")
                        .HasColumnType("int");

                    b.Property<int>("TitleStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("CharacterTitleID");

                    b.ToTable("CharacterTitles");
                });
#pragma warning restore 612, 618
        }
    }
}
